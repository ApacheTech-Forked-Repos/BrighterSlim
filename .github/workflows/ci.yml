name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
 # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Don't show a logo on first run of CLI
  DOTNET_NOLOGO: true
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/
  GITHUB_USER: iancooper
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore 
      - uses: actions/upload-artifact@v2
        with:
          name: dotnet artifacts
          path: |
            ./
            src/
            tests/
  
  test:

    runs-on: ubuntu-latest
    needs: [build]

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Core Tests
        run: dotnet test tests/Paramore.Brighter.Core.Tests/Paramore.Brighter.Core.Tests.csproj -c Release --no-restore --logger "console;verbosity=normal" --blame -v n

  package:
    
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dotnet artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: nuget packages
          path: "**/*.nupkg"
      
  prerelease:
    runs-on: ubuntu-latest
    needs: [package]
    
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: nuget packages
      - name: Push to GitHub Feed
        run: |
          for f in **/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED$GITHUB_REPOSITORY
          done
    
  redis-ci:
    runs-on: ubuntu-latest
    needs: [test]
    
    services:
      redis:  
        image: redis:latest
        ports:
        - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5             
      
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Redis Transport Tests
        run: dotnet test ./tests/Paramore.Brighter.Redis.Tests/Paramore.Brighter.Redis.Tests.csproj --configuration Release --logger "console;verbosity=normal" --blame -v n
  
  rabbitmq-ci:
    runs-on: ubuntu-latest
    needs: [test]

    services:
      rabbitmq:
        image: brightercommand/rabbitmq:3.8-management-delay
        ports:
        - 5672:5672 
        # needed because the rabbitmq container does not provide a healthcheck
        options: >-
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: RMQ Transport Tests
        run: dotnet test ./tests/Paramore.Brighter.RMQ.Tests/Paramore.Brighter.RMQ.Tests.csproj --configuration Release --logger "console;verbosity=normal" --blame -v n

  postgres-ci:
    runs-on: ubuntu-latest
    needs: [test]
  
    services:
      postgres:
        image: postgres
        ports: 
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Postgres Tests
        run: dotnet test ./tests/Paramore.Brighter.PostgresSQL.Tests/Paramore.Brighter.PostgresSQL.Tests.csproj --configuration Release --logger "console;verbosity=normal" --blame -v n
        
  eventstore-ci:
    runs-on: ubuntu-latest
    needs: [test]
    
    services:
      evenstore: 
       image: eventstore/eventstore
       ports: 
         - 1113:1113
         - 2113:2113
       env:
         EVENTSTORE_RUN_PROJECTIONS: ALL
         EVENTSTORE_START_STANDARD_PROJECTIONS: true
         EVENTSTORE_CLUSTER_SIZE: 1
         EVENTSTORE_EXT_TCP_PORT: 1113
         EVENTSTORE_EXT_HTTP_PORT: 2113 
         EVENTSTORE_INSECURE: true
         EVENTSTORE_ENABLE_EXTERNAL_TCP: true
         EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP: true   
     
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
         dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v1.2
        with:
          # Check the following URLs one by one sequentially
          url: https://localhost:2113/health/live
          max-attempts: 5
          retry-delay: 5s
      - name: EventStore Tests
        run: dotnet test ./tests/Paramore.Brighter.EventStore.Tests/Paramore.Brighter.EventStore.Tests.csproj --configuration Release --logger "console;verbosity=normal" --blame -v n
  
  sqlserver-ci:
    runs-on: ubuntu-latest
    needs: [test]
  
    services:
      postgres:
        image: microsoft/mssql-server-linux
        ports: 
          - 1433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password123!
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: MSSQL Tests
        run: dotnet test ./tests/Paramore.Brighter.MSSQL.Tests/Paramore.Brighter.MSSQL.Tests.csproj --configuration Release --logger "console;verbosity=normal" --blame -v n
        
  mysql-ci:
    runs-on: ubuntu-latest
    needs: [test]
  
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: BrighterTests
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      - name: MySQL Tests
        run: dotnet test ./tests/Paramore.Brighter.MySQL.Tests/Paramore.Brighter.MySQL.Tests.csproj --configuration Release --logger "console;verbosity=normal" --blame -v n

  dynamo-ci:
    runs-on: ubuntu-latest
    needs: [test]
  
    services:
      dynamo:
        image: dwmkerr/dynamodb
        ports: 
          - 8000:8000
      
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: DynamoDB Tests
        run: dotnet test ./tests/Paramore.Brighter.DynamoDB.Tests/Paramore.Brighter.DynamoDB.Tests.csproj --configuration Release --logger "console;verbosity=normal" --blame -v n
